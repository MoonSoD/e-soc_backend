generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Personel {
  id            String   @id @default(cuid())
  name          String
  surname       String
  sex           String   @db.VarChar(1)
  phone         String
  email         String   @unique
  password      String
  registered_at DateTime @default(now())
  role          Int      @default(1)
}

model Client {
  id             String               @id @default(cuid())
  name           String
  surname        String
  sex            String               @db.VarChar(1)
  personal_no    String               @db.VarChar(16)
  phone          String
  email          String?
  address        String
  country        String               @db.VarChar(16)
  joined_at      DateTime             @default(now())
  left_at        DateTime?
  medication     ClientMedication[]
  family_members ClientFamilyMember[]
  Visitation     Visitation[]
  Room           Room?                @relation(fields: [roomId], references: [id])
  roomId         Int?
}

model Room {
  id           Int      @id @default(autoincrement())
  display      String   @db.VarChar(16)
  pavilon      Int      @default(1)
  level        Int      @default(0)
  clients      Client[]
  max_capacity Int
}

model Visitation {
  id                   Int                @id @default(autoincrement())
  client               Client             @relation(fields: [clientId], references: [id])
  family_member        ClientFamilyMember @relation(fields: [clientFamilyMemberId], references: [id])
  clientId             String
  clientFamilyMemberId String
}

model ClientFamilyMember {
  id         String       @id @default(cuid())
  name       String
  surname    String
  relation   String
  Client     Client?      @relation(fields: [clientId], references: [id])
  clientId   String?
  Visitation Visitation[]
}

model ClientMedication {
  id                    Int                 @id @default(autoincrement())
  medication            MedicationInventory @relation(fields: [medicationInventoryId], references: [id])
  Client                Client              @relation(fields: [clientId], references: [id])
  clientId              String
  MedicationDose        MedicationDose[]
  medicationInventoryId Int
}

model MedicationDose {
  id                 Int               @id @default(autoincrement())
  day                String
  time               String
  medicationId       Int
  ClientMedication   ClientMedication? @relation(fields: [clientMedicationId], references: [id])
  clientMedicationId Int?
}

model MedicationInventory {
  id               Int                @id @default(autoincrement())
  amount           Int
  suklId           String
  ClientMedication ClientMedication[]
}
